const config = require('../config')
const { cmd } = require('../command')

// Prefix ‡∂ë‡∂ö (config.prefix ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä ‡∂ú‡∂±‡∑ä‡∂±)
const prefixes = Array.isArray(config.prefix) ? config.prefix : [config.prefix]

// ================= COMMAND DATA =================
const comboCommands = [
    { pattern: "hi",        react: "üëãüèª", url: "https://files.catbox.moe/zz8y2l.mp3", msg: "*‡∑Ñ‡∑è‡∂∫‡∑í ‡∑Ñ‡∑è‡∂∫‡∑í ‡∂î‡∂∫‡∑è ‡∂Ω‡∑É‡∑ä‡∑É‡∂± ‡∑Ö‡∂∏‡∂∫‡∑ù ‡∂î‡∂∫‡∑è ‡∂∏‡∑ú‡∂ö‡∂Ø ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∑ö ü•∞ü´∂üèª........*" },
    { pattern: "gm",        react: "üåû", url: "https://files.catbox.moe/uii52y.mp3",  msg: "*Good Morning ‡∑Ö‡∂∏‡∂∫‡∑ù ü•∞ü´∂üèª......*" },
    { pattern: "gn",        react: "üåô", url: "https://files.catbox.moe/mm46ev.mp3",  msg: "*‡∂±‡∑í‡∂Ø‡∑è‡∂ú‡∂±‡∑ä‡∂±‡∂Ø ‡∑Ñ‡∂Ø‡∂±‡∑ä‡∂±‡∑ö ‡∂ë‡∑Ñ‡∑ô‡∂±‡∂∏‡∑ä Good Nightü•±ü´∂üèª.........*" },
    { pattern: "bye",       react: "üëã", url: "https://files.catbox.moe/t2uiab.mp3",  msg: "*‡∂ö‡∑ú‡∑Ñ‡∑ô‡∂Ø ‡∂∫‡∂±‡∑ä‡∂±‡∑ö ‡∂ë‡∑Ñ‡∑ô‡∂±‡∂∏‡∑ä ‡∂ú‡∑í‡∑Ñ‡∑í‡∂±‡∑ä ‡∂¥‡∂ª‡∑í‡∑É‡∑ä‡∑É‡∂∏‡∑ô‡∂±‡∑ä ‡∂ë‡∂±‡∑ä‡∂± ü•∞ü´∂üèª..........*" },
    { pattern: "mk",        react: "ü•±", url: "https://files.catbox.moe/33ioeq.mp3",  msg: "*‡∂∏‡∑ú‡∂ö‡∑î‡∂≠‡∑ä ‡∂±‡∑ê ‡∂Ö‡∂±‡∑ö ‡∂î‡∂∫‡∑è ‡∂∏‡∑ú‡∂ö‡∂Ø ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∑ö ü§îü•∞........*" },

    { pattern: "adareyi",   react: "ü´∂üèª", url: "https://files.catbox.moe/6hz8no.mp3", msg: "*‡∂î‡∂∫‡∑è ‡∂∏‡∂ß ‡∂ö‡∑ú‡∂†‡∑ä‡∂†‡∂ª ‡∂Ü‡∂Ø‡∂ª‡∑ô‡∂∫‡∑í‡∂Ø ‡∂∏‡∂±‡∑ä‡∂±‡∂∏‡∑ä ‡∂î‡∂∫‡∑è‡∂ß ‡∂ú‡∑ú‡∂©‡∑è‡∂ö‡∑ä ‡∂Ü‡∂Ø‡∂ª‡∑ô‡∂∫‡∑í ü´∂üèªüíó............*" },
    { pattern: "ponnaya",   react: "üò°", url: null, msg: "*‡∂≠‡∑ù ‡∂±‡∑ö ‡∂∫‡∂ö‡∑ù ‡∂¥‡∑ú‡∂±‡∑ä‡∂±‡∂∫‡∑è üò°*" },
    { pattern: "huththa",   react: "ü§£", url: null, msg: "*‡∂Ö‡∂±‡∑ö ‡∂¥‡∂Ω‡∂∫‡∂±‡∑ä ‡∑Ñ‡∑î‡∂≠‡∑ä‡∂≠‡∑ù ‡∂∫‡∂±‡∑ä‡∂± ‡∂¥‡∂ö‡∂∫‡∑è ü§£*" },
    { pattern: "vesi",      react: "‚ò†Ô∏è", url: null, msg: "*‡∂≠‡∑ú‡∂ú‡∑ö ‡∂¥‡∂∫‡∑í‡∂∫ ‡∂ö‡∂¥‡∂Ω‡∑è ‡∂Ö‡∂≠‡∂ß ‡∂Ø‡∑ô‡∂±‡∑Ä‡∑è ‡∂Ø‡∑ê‡∂±‡∂ú‡∂±‡∑í‡∂±‡∑ä‚ò†Ô∏è*" },
    { pattern: "tharahada", react: "ü•π", url: "https://files.catbox.moe/xut7wl.mp3", msg: "*‡∂≠‡∂ª‡∑Ñ‡∂Ø ? ü•π*" },
    { pattern: "tharahayi", react: "üò°", url: "https://files.catbox.moe/0t4g3h.mp3", msg: "*‡∂≠‡∂ª‡∑Ñ‡∂∫‡∑í üò°*" },
    { pattern: "gahapan",   react: "üí™üèª", url: "https://files.catbox.moe/tz4ydq.mp3", msg: "*‡∂ú‡∑Ñ‡∂¥‡∂±‡∑ä üí™üèª*" },
]

// ================= REGISTER ALL =================
for (let cc of comboCommands) {

    const register = (pattern) => {
        cmd({
            pattern,
            desc: `Reply + Voice for ${cc.pattern}`,
            category: "combo",
            react: cc.react,
            filename: __filename
        },
        async (conn, mek, m, { from, reply }) => {
            try {
                // 1Ô∏è‚É£ send text first
                if (cc.msg) await reply(cc.msg)

                // 2Ô∏è‚É£ then send voice if exists
                if (cc.url) {
                    await conn.sendMessage(from, {
                        audio: { url: cc.url },
                        mimetype: 'audio/mp4',
                        ptt: true
                    }, { quoted: mek })
                }
            } catch (e) {
                console.log(e)
                reply(`‚ùå Error: ${e}`)
            }
        })
    }

    // register without prefix
    register(cc.pattern)

    // register with all prefixes
    for (let p of prefixes) {
        register(p + cc.pattern)
    }
}